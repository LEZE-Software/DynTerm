<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmd_save.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        0gAADdIBb5L+jgAABEdJREFUWEftlt2L1FUYx5+Zn7a+FkqsJBlGb6LYhgp2YSCpaRfddOEf0FU3EXTT
        TTddJSFi6L45++LartrM5tu6zo67dlFEF10EGQgFQhAEQQQRpPx+8/v1+Z5zZue3M9ibs16ID3z2+5zX
        5znPOTOz9sDuXzvWRrGtb9Gst4U+KyzQPB23/kAf9BLwEHrMVsKbTtVWv8Y1r6M2GBgIDBJoFO21ETtu
        mdOR0O/HO2ilwIl5inYE7ae3j+D9ditoyT6k/yM31iEbDgzNU3QlHuTvAEEHLW7RYRujCmeY4+xkG8W2
        vjtZY1ylVnlHWKvSljjjCYKVCFqyFDLa8qXfMWe1m2en2ii0aJNWa/SPgU+k6CowbIfRDI3R1PlDltCW
        XofHQJUqmI3jfAwKqDKOWjccdaq2+jWueaJhjbbGxBjBVYFR+wDN0BhSkJ8EvcHYBtQH15uxCRinoc/k
        KVvFRrOQOVVbr1Xjmne6BfX59ZGrwpi9H9bGkAY/CfoDFdroKqZraryZ+ZOM23JOMgMZ3Apac/1vM36a
        JPRozoJUCXiNmKcqvBfWxJAGPwl6k8BPo/6amu8F04ZnrYuTzEIGcYteJkiXVd28gn2CKuGya0eMqwrv
        hrkJpDlf+iPzn0NV4aKrQOPhCrfZhC3jNJ9BBnHQvH+eYEvtAnPLJKHgZYKrAmfsnTAngTTnS38i+S2o
        4hRdrMbDFc58BcQKTncVMoiD5v2yTRL0PAlM2hLaBm+FsQTSnC/9mT17UH9NurLmdefM32vBptAyj65C
        JSpsUCGw17w/YZ+yWYW5Fb7bfV8CafDrQX+B7eCvSQfMP94FpkFlqdJeRCftEYJ8ARnEQfN+P7wR/Dqk
        OV/6K+wEf03+rTRpM3+fOpGCF+wSes7WUuqvIIM4aAr1FtSnMfnS32AXaK8ImvuLO5omCmV9LlzHBXuU
        inwNGcRBU6gH5KtPvvR32A1GAhH7NPfVof7RtEDopV/kxU6jU7YOvuGDmKGx08sE9qivHvr+wN+Lam3k
        9tBeOpD8f2WzoMlCGU+RhD7707YertsVAk3z4KTer6Mp/In/KmhN5NbqCvxB/qNdAZVf6DTTJDGDVvn+
        rvI9PkPgKklUCTzjuI3/Gmhu5JJQAkLr/5cpCW0k5FdJ4ipa43u8Zt/jZ2iCxujroDmRS0JBFVxr78q0
        WQNVoEYSc+isPQU38TP0oLu2GsGVhIL6anXIvgRtrNMr0BxJXEOv2TY46Pw5gqtK+iX8Fj6HRbF1kMEI
        H1H/paXf/SJ/75Ep+EIKbX2LYPy75E4ZwRJYCg8FumBZC+oTGtdcrdFa7aG9/ta0YAWsARX8CXgGtsA2
        2AkvwcuwDw7AfngF9sBu2AUvwg7oAa19Fp6Ex0H7roXVoISV4HxiylJJLIeHQRO1YANoA220GbbCC6Ck
        tgdV+3lQwE2gxLVGh1gP3aD9tO9KUJUUnJhmfwH69zBQ4aN/2gAAAABJRU5ErkJggg==
</value>
  </data>
</root>